# GitHub action file for SwanHub SDK
name: SwanHub SDK Application Workflow

# Triggers the workflow on push or pull request
on:
  push: # Triggered on a push to any branch ( do not change )
  pull_request: # Triggered on a pull request to any branch ( Do not Change)
  schedule:
    # Run workflow at 4 AM EST (9 AM UTC)
    - cron: '0 9 * * *'
    # Run workflow at 7 PM EST (12 AM UTC next day)
    - cron: '0 0 * * *'
  release:
    types: [ created ] # Triggers the workflow when a release is created.

# Defines the jobs that the workflow will execute
jobs:
  # Linting job using Black
  lint:
    runs-on: ubuntu-latest # Specifies the runner environment
    steps:
      - uses: actions/checkout@v4 # Checks out the repository code

      - name: Set up Python
        uses: actions/setup-python@v4 # Sets up a Python environment
        with:
          python-version: '3.x' # Specifies Python version 3.x

      - name: Install Black
        run: pip install black # Installs Black for linting

      - name: Lint with Black
        run: black --check ./**/*.py # Runs Black in check mode on Python files only

  # Testing job
  test:
    needs: lint # Depends on the lint job
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install -r requirements.txt # Installs project dependencies

      - name: Run tests
        run: pytest # Runs tests using pytest

      - name: Send Test Status Email
        if: failure() || success()
        uses: softprops/action-email@v1
        with:
          from: sender@nbai.io
          to: recipient1@nbai.io, recipient2@nbai.io
          subject: Test Status - SwanHub SDK Application
          smtp-server: smtp.nbai.io
          smtp-username: ${{ secrets.SMTP_USERNAME }}
          smtp-password: ${{ secrets.SMTP_PASSWORD }}
          smtp-port: 587
          smtp-secure: true
          html: |
            <p>Test status: ${{ job.status }}

  # Build job (placeholder - customize as needed)
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # Check out the repository code.
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
        # Set up a Python environment with Python 3.x.
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        # Upgrade pip and install project dependencies from requirements.txt.
      - name: Build the project
        run: |
          python setup.py sdist bdist_wheel
        # This command will build a source distribution (sdist)
        # and a wheel (bdist_wheel) using setup.py file
      - name: Send Build Status Email
        if: failure() || success()
        uses: softprops/action-email@v1
        with:
          from: sender@nbai.io
          to: recipient1@nbai.io, recipient2@nbai.io
          subject: Build Status - SwanHub SDK Application
          smtp-server: smtp.nbai.io
          smtp-username: ${{ secrets.SMTP_USERNAME }}
          smtp-password: ${{ secrets.SMTP_PASSWORD }}
          smtp-port: 587
          smtp-secure: true
          html: |
            <p>Build status: ${{ job.status }}

  # Deployment job to PyPI
  deploy-to-pypi:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'created'
    steps:
      - uses: actions/checkout@v4
        # Check out the repository code.

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
        # Set up a Python environment with Python 3.x.

      - name: Install Twine
        run: |
          pip install twine
        # Install Twine, a tool for uploading Python packages to PyPI.

      - name: Build and Publish to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          # Build source distribution (sdist) and wheel (bdist_wheel).
          twine upload dist/*
          # Upload the built distributions to PyPI using Twine.

      - name: Send Deployment Status Email
        if: failure() || success()
        uses: softprops/action-email@v1
        with:
          from: sender@nbai.io
          to: recipient1@nbai.io, recipient2@nbai.io
          subject: Deployment Status - SwanHub SDK Application
          smtp-server: smtp.nbai.io
          smtp-username: ${{ secrets.SMTP_USERNAME }}
          smtp-password: ${{ secrets.SMTP_PASSWORD }}
          smtp-port: 587
          smtp-secure: true
          html: |
            <p>Deployment status: ${{ job.status }}
  

  # Database setup job
  setup-database:
    runs-on: ubuntu-latest
    services: # Define the PostgreSQL service
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: test_db  # Database name
          POSTGRES_USER: test_user  # Desired username
          POSTGRES_PASSWORD: test_password  # Desired password
        ports:
          - 5432:5432
    steps:
      - name: Wait for PostgreSQL to start
        run: |
          for i in {1..30}; do
            nc -z localhost 5432 && break
            sleep 1
          done
          sleep 10

      - name: Install Python Dependencies
        run: |
          sudo apt-get -y install python3-pip
          pip install --upgrade pip

      - name: Database Setup Steps
        run: |
          python setup_database.py
        # Create a setup_database.py file and run it here

# Permissions setup for the workflow
permissions:
    contents: read # Grants read access to the repository contents
    pull-requests: write # Grants write access to pull requests
    issues: write # Grants write access to issues (optional)
    actions: read # Grants read access to other GitHub Actions workflows (optional)

